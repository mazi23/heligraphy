# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3307/test

# Username and password
spring.datasource.username = root
spring.datasource.password = root

#spring.datasource.url = jdbc:mysql://46.252.24.59:3306/test

# Username and password
#spring.datasource.username = mazi23
#spring.datasource.password = azo8a3f3f
#online DB

#spring.datasource.url = jdbc:mysql://mysqlsvr71.world4you.com:3306/1177852db1

# Username and password
#spring.datasource.username = sql8321125
#spring.datasource.password = xpz*muh



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found i n
# the project
spring.jpa.hibernate.ddl-auto = update
spring.jpa.generate-ddl=true

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

server.context-path=/




